@import './variables';

/* #region ####################### MIXIN DE BREAKPOINTS MAXIMOS ####################### */

// Pequenos dispositivos 576px
@mixin sm-max {
  @media (max-width: #{$screen-sm-min}) {
    @content;
  }
}

// Dispositivos médios 768px
@mixin md-max {
  @media (max-width: #{$screen-md-min}) {
    @content;
  }
}

// Grandes dispositivos 992px
@mixin lg-max {
  @media (max-width: #{$screen-lg-min}) {
    @content;
  }
}

// Dispositivos extra grandes 1200px
@mixin xl-max {
  @media (max-width: #{$screen-xl-min}) {
    @content;
  }
}

// Dispositivos personalizados resize width dimension
@mixin rwd-max($screen) {
  @media (max-width: $screen + "px") {
    @content;
  }
}

/* #endregion */

/* #region ####################### MIXIN DE BREAKPOINTS MINIMOS ####################### */

// Pequenos dispositivos - 576px
@mixin sm-min {
  @media (min-width: #{$screen-sm-min}) {
    @content;
  }
}

// Dispositivos médios - 768px
@mixin md-min {
  @media (min-width: #{$screen-md-min}) {
    @content;
  }
}

// Grandes dispositivos - 992px
@mixin lg-min {
  @media (min-width: #{$screen-lg-min}) {
    @content;
  }
}

// Dispositivos extra grandes - 1200px
@mixin xl-min {
  @media (min-width: #{$screen-xl-min}) {
    @content;
  }
}

// Dispositivos personalizados resize width dimension
@mixin rwd-min($screen) {
  @media (min-width: $screen + "px") {
    @content;
  }
}

/* #endregion */

/* #region ############################ UTILS ############################################## */

// Mixin para centralização de conteudo, vertical, horizontal ou ambos, para containers não flex
@mixin align($vertical: true, $horizontal: false, $position: relative) {
  @if $position {
    position: $position;
  }

  @if ($vertical) {
    top: 50%;
    text-transform: translateX(-50%);
  }

  @if ($horizontal) {
    left: 50%;
    text-transform: translateY(-50%);
  }

  @if ($vertical and $horizontal) {
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }
}

// Mixin para controlar os containers do sistema
@mixin container ($width: 100%, $height: max-content, $p-t-b: 0px, $p-l-r: 0px, $background-color: $color-white) {
    width: $width;
    height: $height;
    padding: $p-t-b $p-l-r;
    background: $background-color;
}

// Mixin para definir a orientação do bloco que agrupa elementos
@mixin orientation($pos: absolute, $display: block, $content: "") {
  content: $content;
  display: $display;
  position: $pos;
}

// Mixin para adicionar reticencias em textos
@mixin ellipse($truncation-boundary) {
  max-width: $truncation-boundary;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

// Mixin para formatação de botões. define tamanho, cor de texto e cor de fundo
@mixin buttonTransform($primary, $secundary, $lenght: '') {
  @if($lenght !='') {
    width: $lenght;
  }

  background: $primary;
  color: $secundary;

  /* &:hover { } */
}

/* Mixin para imagens de background */
@mixin backgroundImageFull($url) {
  height: 100%;
  background-image: url($url);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}

@mixin fullSize() {
  height: 100%;
  width: 100%;
}

/* endregion */


/* #region ############################ TEXTOS ############################################## */
@mixin textFormatter($font-size, $font-weight: 400, $color, $margin-top: 0px, $display: block) {
  font-size: $font-size;
  font-weight: $font-weight;
  color: $color;
  margin-top: $margin-top;
  display: $display;
}

// Mixin para formatação de textos, sendo a font que será usada, o tamanho e cor
@mixin textTransform($font-family, $font-size, $color, $bold: false) {
  font-family: $font-family;
  font-size: $font-size;
  color: $color;

  @if($bold) {
    font-weight: 600;
  }
}

/* endregion */
